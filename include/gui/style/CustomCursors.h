#ifndef CUSTOM_CURSORS_H_
#define CUSTOM_CURSORS_H_

#include <qbitmap.h>

namespace scs
{
	void giveCrossCursorBitmaps(QBitmap& B, QBitmap& M)
	{
		int f = 32;

		static unsigned char b[128]
		{ 
		0b00000000, 0b00000000, 0b00000000, 0b00000000,
		0b00000000, 0b00000001, 0b10000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00011111, 0b11111111, 0b11111111, 0b11111000,
		0b00111111, 0b11111111, 0b11111111, 0b11111100,
		0b00111111, 0b11111111, 0b11111111, 0b11111100,
		0b00011111, 0b11111111, 0b11111111, 0b11111000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000011, 0b11000000, 0b00000000,
		0b00000000, 0b00000001, 0b10000000, 0b00000000,
		0b00000000, 0b00000000, 0b00000000, 0b00000000
		};
		static unsigned char m[128]
		{
		0b00000000, 0b00000000, 0b00000000, 0b00000000,
		0b00000000, 0b00000001, 0b10000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00011111, 0b11111110, 0b01111111, 0b11111000,
		0b00100000, 0b00000000, 0b00000000, 0b00000100,
		0b00100000, 0b00000000, 0b00000000, 0b00000100,
		0b00011111, 0b11111110, 0b01111111, 0b11111000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000010, 0b01000000, 0b00000000,
		0b00000000, 0b00000001, 0b10000000, 0b00000000,
		0b00000000, 0b00000000, 0b00000000, 0b00000000
		};

		B = QBitmap::fromData(QSize(32, 32), b, QImage::Format_Mono);
		M = QBitmap::fromData(QSize(32, 32), m, QImage::Format_Mono);
	}
}
#endif